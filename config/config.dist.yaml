pipeline:
  input:
    class: ml4iiot.input.csv.CsvInput
    config:
      windowing_strategy:
        class: ml4iiot.input.windowing.timebased.TimeBasedWindowingStrategy
        config:
          window_size: 720s
          stride_size: 360s
          batch_size: 1000
          resample:
            enabled: True
            target_sampling_rate: 10s
            method: interpolate
            interpolation_method: linear
      delimiter: ','
      csv_file: /some/path/to/your/data.csv
      index_column: datetime
      columns:
        datetime:
          type: datetime
          datetime_format: 'iso'
        sensor_a_value: float
        sensor_b_value: float
  output:
    class: ml4iiot.output.compound.CompoundOutput
    config:
      output_adapters:
        - class: ml4iiot.output.std.StdOutput
        - class: ml4iiot.output.plot.PlotOutput
          config:
            show_plot: True
            save_path: ./out/
            format: svg
            figures:
              - save_figure: True
                plots:
                  - source: input
                    column: sensor_a_value
                    color: '#2A638C'
                    linestyle: solid
                  - source: output
                    column: average_a
                    color: '#D01431'
                    linestyle: --
  algorithm:
    class: ml4iiot.algorithms.stochastic.average.Average
    config:
      columns:
        sensor_a_value: average_a
        sensor_b_value: average_b